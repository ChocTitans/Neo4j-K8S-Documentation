name: Workflow for deployment of a service in K8S
on: 
    workflow_dispatch:

jobs:
  setup_config_secret:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ vars.AWS_NAME_CLUSTER }} --region ${{ vars.AWS_REGION }}

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          sudo mv kustomize /usr/local/bin/

      - name: Create Secret file
        env:
          SECRETS: '${{ toJson(secrets) }}'
        run: |
          for secret in $(echo "$SECRETS" | jq -r 'keys[] | select(. != "github_token")'); do
            value="$(jq -r --arg key "$secret" '.[$key]' <<< "$SECRETS")"
            echo "$secret=$value" >> secret.env
          done

      - name : Check if secret.env is empty
        run: |
          if [[ ! -s secret.env ]]; then
            echo "Error: secret.env is empty"
            exit 1
          fi
          
      - name: Generate ConfigMap YAML
        run: |
          cat <<EOF > ./base/configmaps/configmap.yaml
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: neo4j-env
          data:
          $(awk -F '=' '{printf "  %s: \"%s\"\n", $1, $2}' configmap.env)
          EOF

      - name: Update Neo4j Image
        run: |
          export NEO4J_IMAGE_VERSION=${{ vars.NEO4J_IMAGE_VERSION }}
          envsubst < ./base/statefulset.yaml > ./base/statefulset_updated.yaml
          mv ./base/statefulset_updated.yaml ./base/statefulset.yaml
          
      - name: Kustomize build & apply
        run: |
          kustomize build . | kubectl delete -f - || true
          sleep 5
          kustomize build . | kubectl apply -f -
          